import json
import os
import random
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

TOKEN = "8178314234:AAGbsPzufZBjWvVvQ2ka1ytdqiZXQnzCvUk"
YOUR_USER_ID = 5252767835
DB_FILE = "users.json"

def load_db():
    if os.path.exists(DB_FILE):
        with open(DB_FILE) as f:
            return json.load(f)
    return {}

def save_db(db):
    with open(DB_FILE, 'w') as f:
        json.dump(db, f)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    db = load_db()
    user_id_str = str(user.id)
    
    if user_id_str not in db:
        db[user_id_str] = {
            "username": user.username,
            "chips": 1000
        }
        save_db(db)
        await update.message.reply_text(
            "üé≤ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Poker Club!\n"
            "üí∞ –í–∞—à —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: 1000 —Ñ–∏—à–µ–∫\n\n"
            "üÉè –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "/dice - –ò–≥—Ä–∞—Ç—å –≤ –∫–æ—Å—Ç–∏ (—Å—Ç–∞–≤–∫–∞ 50 —Ñ–∏—à–µ–∫)\n"
            "/balance - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å\n"
            "/help - –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"
        )
    else:
        balance = db[user_id_str]["chips"]
        await update.message.reply_text(f"‚ô†Ô∏è –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! –í–∞—à –±–∞–ª–∞–Ω—Å: {balance} —Ñ–∏—à–µ–∫")

async def balance(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    db = load_db()
    user_id_str = str(user.id)
    
    if user_id_str in db:
        balance = db[user_id_str]["chips"]
        await update.message.reply_text(f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance} —Ñ–∏—à–µ–∫")
    else:
        await update.message.reply_text("‚ö†Ô∏è –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –í–≤–µ–¥–∏—Ç–µ /start")

async def add_chips(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != YOUR_USER_ID:
        await update.message.reply_text("‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω!")
        return
    
    try:
        username = context.args[0].lstrip('@')
        amount = int(context.args[1])
        
        db = load_db()
        for user_id, data in db.items():
            if data["username"] == username:
                db[user_id]["chips"] += amount
                save_db(db)
                await update.message.reply_text(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {amount} —Ñ–∏—à–µ–∫ –∏–≥—Ä–æ–∫—É @{username}")
                return
        
        await update.message.reply_text("‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except:
        await update.message.reply_text("‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add_chips @username –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ")

async def help_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    help_text = """
üÉè –ö–æ–º–∞–Ω–¥—ã –ø–æ–∫–µ—Ä-–±–æ—Ç–∞:
/start - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å
/dice - –ò–≥—Ä–∞—Ç—å –≤ –∫–æ—Å—Ç–∏ (—Å—Ç–∞–≤–∫–∞ 50 —Ñ–∏—à–µ–∫)
/balance - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å
/help - –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º

üëë –ê–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã:
/add_chips @username —Å—É–º–º–∞ - –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏—à–∫–∏ –∏–≥—Ä–æ–∫—É
"""
    await update.message.reply_text(help_text)

async def play_dice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    db = load_db()
    user_id_str = str(user.id)
    
    if user_id_str not in db:
        await update.message.reply_text("‚ö†Ô∏è –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –í–≤–µ–¥–∏—Ç–µ /start")
        return
    
    # –°—Ç–∞–≤–∫–∞
    bet = 50
    if db[user_id_str]["chips"] < bet:
        await update.message.reply_text("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ñ–∏—à–µ–∫! –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞: 50 —Ñ–∏—à–µ–∫")
        return
    
    # –í—ã—á–∏—Ç–∞–µ–º —Å—Ç–∞–≤–∫—É
    db[user_id_str]["chips"] -= bet
    save_db(db)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    player_dice = random.randint(1, 6)
    bot_dice = random.randint(1, 6)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
    if player_dice > bot_dice:
        win_amount = bet * 2
        db[user_id_str]["chips"] += win_amount
        save_db(db)
        result = f"üéØ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {win_amount} —Ñ–∏—à–µ–∫!"
    elif player_dice < bot_dice:
        result = "üí• –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!"
    else:
        db[user_id_str]["chips"] += bet  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–≤–∫—É –ø—Ä–∏ –Ω–∏—á—å–µ
        save_db(db)
        result = "ü§ù –ù–∏—á—å—è! –°—Ç–∞–≤–∫–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    await update.message.reply_text(
        f"üé≤ –í–∞—à –∫—É–±–∏–∫: {player_dice}\n"
        f"ü§ñ –ö—É–±–∏–∫ –±–æ—Ç–∞: {bot_dice}\n\n"
        f"{result}\n"
        f"üí∞ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {db[user_id_str]['chips']} —Ñ–∏—à–µ–∫\n\n"
        "‚û°Ô∏è –°—ã–≥—Ä–∞—Ç—å –µ—â–µ: /dice"
    )

def main():
    app = Application.builder().token(TOKEN).build()
    
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("balance", balance))
    app.add_handler(CommandHandler("add_chips", add_chips))
    app.add_handler(CommandHandler("help", help_cmd))
    app.add_handler(CommandHandler("dice", play_dice))  # –î–æ–±–∞–≤–∏–ª–∏ –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É
    
    print("–ü–æ–∫–µ—Ä-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()

if __name__ == "__main__":
    main()
